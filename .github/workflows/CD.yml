name: CD

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'OS-Q/P68'
    strategy:
      fail-fast: true
      matrix:
        examples:
          - "gpio-blink"
          - "adc-example"
          - "arduino-blink"
          - "socket-example"
          - "ssl-socket-example"
          - "ssl-socket-clientauth"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 1

    - name: Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install -U https://github.com/OS-Q/S03/archive/master.zip
        qio platform install file://.

    - name: Build
      run: |
        qio run -d examples/${{ matrix.examples }}

  release:
    needs:
      - build
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Generate tag
        id: tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "::set-output name=release_tag::release_package_$(date +"%Y.%m.%d")_${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=status::success"

      - name: Package Src
        id: package
        run: |
          echo "Platform P68 for GSM SoC" >> README.txt
          echo $(date +"%Y.%m.%d") >> README.txt
          echo ${GITHUB_REF/refs\/tags\//} >> README.txt
          echo -e "www.OS-Q.com\n" >> README.txt
          git log --stat -1 >> README.txt
          zip -r P68.zip boards extend link.json link.py
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload Firmware
        if: steps.package.outputs.status == 'success' && !cancelled()
        uses: actions/upload-artifact@v2
        with:
          name: P68
          path: ${{ env.FIRMWARE }}/P68.zip

      - name: Upload Release
        id: upload-release
        uses: stopstopstop/release-action@master
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            ${{ env.FIRMWARE }}/P68.zip
            ${{ env.FIRMWARE }}/README.txt

      - name: Setup OSS
        uses: stopstopstop/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: Upload To OSS
        id: OSS
        run: |
          ossutil cp ${{ env.FIRMWARE }}/P68.zip ${{ secrets.OSS_BUCKET }} -rf
          echo "::set-output name=status::success"

  rebuild:
    needs:
      - release
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        id: getgh
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/archive/master.zip
          wget https://github.com/OS-Q/P68/releases/latest/download/P68.zip -O P68.zip
          wget https://github.com/OS-Q/P68/releases/latest/download/README.txt -O README.txt
          qio platform install file://./P68.zip
          echo "::set-output name=status::success"

      - name: ReBuild
        id: rebuild
        if: steps.getgh.outputs.status == 'success' && !cancelled()
        run: |
          qio run -d examples/gpio-blink
          qio run -d examples/arduino-blink
          qio run -d examples/socket-example
          qio run -d examples/ssl-socket-example
          qio run -d examples/ssl-socket-clientauth

      - name: Send Mail
        if: steps.rebuild.outputs.status == 'success' && !cancelled()
        uses: stopstopstop/mail-action@master
        with:
          server_address:  smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: OS-Q P68 Released
          to: ${{secrets.MAIL_TO}}
          from: Qitas
          cc: ${{github.event.pusher.email}}
          content_type: text/html
          convert_markdown: true
          attachments: README.txt,P68.zip
          body: file://README.md

      - name: notification
        uses: stopstopstop/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: ${{steps.rebuild.outputs.status}}
